<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snacks - Absolute Cinema</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="snacks.css">
</head>
<body>
  <!-- Theme Toggle -->
  <div class="theme-toggle">
    <div class="dropdown">
      <button class="theme-btn" type="button" id="themeToggle" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="bi bi-moon-stars-fill"></i>
      </button>
      <ul class="dropdown-menu theme-menu" aria-labelledby="themeToggle">
        <li><button class="dropdown-item theme-item" data-bs-theme-value="light"><i class="bi bi-sun-fill"></i>Light</button></li>
        <li><button class="dropdown-item theme-item active" data-bs-theme-value="dark"><i class="bi bi-moon-stars-fill"></i>Dark</button></li>
        <li><button class="dropdown-item theme-item" data-bs-theme-value="auto"><i class="bi bi-circle-half"></i>Auto</button></li>
      </ul>
    </div>
  </div>

  <!-- Navigation -->
  <div class="nav-container">
    <div class="container py-2">
      <div class="d-flex justify-content-between align-items-center">
        <h1 class="logo-text m-0">Absolute Cinema</h1>
        <div class="search-container">
          <i class="bi bi-search search-icon"></i>
          <input id="searchInput" type="search" class="form-control" placeholder="Search snacks..." aria-label="Search" autocomplete="off">
        </div>
      </div>

      <div class="d-flex flex-wrap align-items-center mt-3">
        <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 mb-md-0">
          <li><a href="/" class="nav-link px-2">Home</a></li>
          <li><a href="/movies" class="nav-link px-2">Movies</a></li>
          <li><a href="/bookings" class="nav-link px-2">Bookings</a></li>
          <li><a href="/snacks" class="nav-link px-2 active">Snacks</a></li>
          <li><a href="/loyalty" class="nav-link px-2">Loyalty Program</a></li>
          <li><a href="/feedback" class="nav-link px-2">Feedback</a></li>
          <li><a href="/contact" class="nav-link px-2">Contact</a></li>
        </ul>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="container">
    <!-- Page Header -->
    <div class="page-header fadeIn">
      <h1 class="page-title">Cinema Delights</h1>
      <p class="page-subtitle">Elevate your movie experience with our gourmet snacks and refreshments</p>
    </div>

    <!-- Category Navigation -->
    <div class="category-nav fadeIn delay-1">
      <div class="container d-flex">
        <a href="#popcorn" class="nav-link">Popcorn</a>
        <a href="#drinks" class="nav-link">Drinks</a>
        <a href="#coffee" class="nav-link">Coffee</a>
        <a href="#shakes" class="nav-link">Shakes</a>
        <a href="#fastfood" class="nav-link">Fast Food</a>
        <a href="#snacks" class="nav-link">Snacks</a>
        <a href="#combos" class="nav-link">Combos</a>
      </div>
    </div>

    <!-- Popcorn Section -->
    <div id="popcorn" class="category-section fadeIn delay-2">
      <h2 class="category-title">Popcorn</h2>
      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        <!-- Popcorn Item 1 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="classic butter popcorn.jpg" alt="Classic Butter Popcorn">
              <div class="snack-price">PKR 300</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Classic Butter Popcorn</h3>
              <p class="snack-description">Freshly popped corn with our signature butter blend</p>
              <div class="snack-options">
                <div class="size-option active">Small</div>
                <div class="size-option">Medium PKR 400</div>
                <div class="size-option">Large PKR 500</div>
              </div>
              <div class="quantity-control">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="p1" data-name="Classic Butter Popcorn" data-price="4.99">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>

        <!-- Popcorn Item 2 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="caramel popcorn.jpg" alt="Caramel Popcorn">
              <div class="snack-price">PKR 400</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Caramel Popcorn</h3>
              <p class="snack-description">Sweet caramel-coated popcorn, perfectly crunchy</p>
              <div class="snack-options">
                <div class="size-option active">Small</div>
                <div class="size-option">Medium PKR 500</div>
                <div class="size-option">Large PKR 600</div>
              </div>
              <div class="quantity-control">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="p2" data-name="Caramel Popcorn" data-price="5.99">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>

        <!-- Popcorn Item 3 -->
        <div class="col">
            <div class="snack-card">
              <div class="snack-img">
                <img src="cheese.jpg" alt="Cheese Popcorn">
                <div class="snack-price">PKR 500</div>
              </div>
              <div class="snack-body">
                <h3 class="snack-title">Cheese Popcorn</h3>
                <p class="snack-description">Savory cheese-flavored popcorn, a fan favorite</p>
                <div class="snack-options">
                  <div class="size-option active">Small</div>
                  <div class="size-option">Medium PKR 600</div>
                  <div class="size-option">Large PKR 700</div>
                </div>
                <div class="quantity-control">
                  <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                  <span class="qty-value">1</span>
                  <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
                </div>
                <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="p2" data-name="Caramel Popcorn" data-price="5.99">
                  <i class="bi bi-cart-plus"></i> Add to Cart
                </button>
              </div>
            </div>
          </div>
      </div>
    </div>

    <!-- Drinks Section -->
    <div id="drinks" class="category-section fadeIn delay-3">
      <h2 class="category-title">Drinks</h2>
      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        <!-- Drink Item 1 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="coca cola.jpg" alt="Classic Cola">
              <div class="snack-price">PKR 200</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Classic Cola</h3>
              <p class="snack-description">Refreshing cola with ice, the perfect movie companion</p>
              <div class="snack-options">
                <div class="size-option active">Small</div>
                <div class="size-option">Medium PKR 250</div>
                <div class="size-option">Large PKR 320</div>
              </div>
              <div class="quantity-control">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="d1" data-name="Classic Cola" data-price="3.99">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>

        <!-- Drink Item 2 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="sparkling water.jpg" alt="Sparkling Water">
              <div class="snack-price">PKR 150</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Sparkling Water</h3>
              <p class="snack-description">Crisp sparkling water, available in original or flavored</p>
              <div class="snack-options">
                <div class="size-option active">Original</div>
                <div class="size-option">Lemon</div>
                <div class="size-option">Berry</div>
              </div>
              <div class="quantity-control">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="d2" data-name="Sparkling Water" data-price="2.99">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>

        <!-- Drink Item 3 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="fresh orange juice.jpg" alt="Fresh Orange Juice">
              <div class="snack-price">PKR 250</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Fresh Orange Juice</h3>
              <p class="snack-description">Freshly squeezed orange juice, no added sugar</p>
              <div class="dietary-tags">
                <span class="dietary-tag vegan">Vegan</span>
                <span class="dietary-tag gluten-free">Gluten-Free</span>
              </div>
              <div class="quantity-control mt-2">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="d3" data-name="Fresh Orange Juice" data-price="4.99">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Coffee Section -->
    <div id="coffee" class="category-section fadeIn delay-4">
      <h2 class="category-title">Coffee</h2>
      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        <!-- Coffee Item 1 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="espresso.jpg" alt="Espresso">
              <div class="snack-price">PKR 550</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Espresso</h3>
              <p class="snack-description">Strong and rich espresso shot for coffee lovers</p>
              <div class="snack-options">
                <div class="size-option active">Single</div>
                <div class="size-option">Double PKR 950</div>
              </div>
              <div class="quantity-control">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="c1" data-name="Espresso" data-price="3.49">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>

        <!-- Coffee Item 2 -->
        <div class="col">
          <div class="snack-card">
            <div class="snack-img">
              <img src="capacinoo.jpg" alt="Cappuccino">
              <div class="snack-price">PKR 600</div>
            </div>
            <div class="snack-body">
              <h3 class="snack-title">Cappuccino</h3>
              <p class="snack-description">Classic cappuccino with perfect milk foam</p>
              <div class="snack-options">
                <div class="size-option active">Regular</div>
                <div class="size-option">Large PKR 750</div>
              </div>
              <div class="quantity-control">
                <button class="qty-btn" onclick="decreaseQuantity(this)">-</button>
                <span class="qty-value">1</span>
                <button class="qty-btn" onclick="increaseQuantity(this)">+</button>
              </div>
              <button class="btn btn-add-cart" onclick="addToCart(this)" data-id="c2" data-name="Cappuccino" data-price="4.99">
                <i class="bi bi-cart-plus"></i> Add to Cart
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Additional sections would continue here for Shakes, Fast Food, Snacks, and Combos -->




  <!-- Footer -->
  <footer class="footer">
    <div class="container">
      <div class="row">
        <div class="col-md-3 mb-4">
          <h4 class="footer-title">Absolute Cinema</h4>
          <p class="mb-2 opacity-75">Elevating your movie experience with premium comfort and state-of-the-art technology.</p>
          <div class="social-links">
            <a href="#" class="social-link"><i class="bi bi-facebook"></i></a>
            <a href="#" class="social-link"><i class="bi bi-twitter"></i></a>
            <a href="#" class="social-link"><i class="bi bi-instagram"></i></a>
            <a href="#" class="social-link"><i class="bi bi-youtube"></i></a>
          </div>
        </div>
        <div class="col-md-3 mb-4">
          <h4 class="footer-title">Quick Links</h4>
          <ul class="footer-links">
            <li><a href="/">Home</a></li>
            <li><a href="/movies">Movies</a></li>
            <li><a href="/bookings">Bookings</a></li>
            <li><a href="/snacks">Snacks</a></li>
            <li><a href="/loyalty">Loyalty Program</a></li>
          </ul>
        </div>
        <div class="col-md-3 mb-4">
          <h4 class="footer-title">Information</h4>
          <ul class="footer-links">
            <li><a href="/about">About Us</a></li>
            <li><a href="/contact">Contact Us</a></li>
            <li><a href="/feedback">Feedback</a></li>
            <li><a href="/faq">FAQ</a></li>
            <li><a href="/terms">Terms & Conditions</a></li>
            <li><a href="/privacy">Privacy Policy</a></li>
          </ul>
        </div>
        <div class="col-md-3 mb-4">
          <h4 class="footer-title">Contact</h4>
          <ul class="footer-links">
            <li><i class="bi bi-geo-alt me-2"></i> 123 Cinema Street, Movie City</li>
            <li><i class="bi bi-telephone me-2"></i> (555) 123-4567</li>
            <li><i class="bi bi-envelope me-2"></i> info@absolutecinema.com</li>
          </ul>
        </div>
      </div>
      <div class="copyright">
        <p>&copy; 2025 Absolute Cinema. All rights reserved.</p>
      </div>
    </div>
  </footer>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Theme toggle functionality
    document.addEventListener('DOMContentLoaded', () => {
      const themeButtons = document.querySelectorAll('.theme-item');
      
      // Set theme from localStorage or default to dark
      const savedTheme = localStorage.getItem('theme') || 'dark';
      document.documentElement.setAttribute('data-bs-theme', savedTheme);
      
      // Update active class
      themeButtons.forEach(button => {
        if (button.getAttribute('data-bs-theme-value') === savedTheme) {
          button.classList.add('active');
        } else {
          button.classList.remove('active');
        }
      });
      
      // Event listeners for theme buttons
      themeButtons.forEach(button => {
        button.addEventListener('click', () => {
          const theme = button.getAttribute('data-bs-theme-value');
          document.documentElement.setAttribute('data-bs-theme', theme);
          localStorage.setItem('theme', theme);
          
          // Update active class
          themeButtons.forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
        });
      });
    });
    
    // Cart functionality
    let cart = [];
    
    function toggleCart() {
      const cart = document.getElementById('shoppingCart');
      cart.classList.toggle('open');
    }
    
    function decreaseQuantity(btn) {
      const qtyEl = btn.nextElementSibling;
      let qty = parseInt(qtyEl.textContent);
      if (qty > 1) {
        qty--;
        qtyEl.textContent = qty;
      }
    }
    
    function increaseQuantity(btn) {
      const qtyEl = btn.previousElementSibling;
      let qty = parseInt(qtyEl.textContent);
      qty++;
      qtyEl.textContent = qty;
    }

    
  </script>



  
  <!-- JavaScript for Category Navigation and Dynamic Pricing -->
  <script>
    // Initialize slide positions
    const slidePositions = {};
    
    document.addEventListener('DOMContentLoaded', () => {
      // Initialize slide positions for all categories
      const categories = ['popcorn', 'drinks', 'coffee', 'shakes', 'fastfood', 'snacks', 'combos'];
      categories.forEach(category => {
        // Only process if the category exists
        if (document.getElementById(category)) {
          // Convert regular section to slider section
          setupCategorySlider(category);
          slidePositions[category] = 0;
        }
      });
      
      // Setup size option listeners for dynamic pricing
      setupSizeOptions();
    });
    
    function setupCategorySlider(category) {
      const categorySection = document.getElementById(category);
      if (!categorySection) return;
      
      // Get the title and create header
      const titleElement = categorySection.querySelector('.category-title');
      const title = titleElement ? titleElement.textContent : category;
      
      // Create the category header with navigation buttons
      const categoryHeader = document.createElement('div');
      categoryHeader.className = 'category-header';
      categoryHeader.innerHTML = `
        <h2 class="category-title">${title}</h2>
        <div class="category-navigation">
          <button class="nav-btn prev-btn" onclick="slideCategory('${category}', 'prev')">
            <i class="bi bi-chevron-left"></i>
          </button>
          <button class="nav-btn next-btn" onclick="slideCategory('${category}', 'next')">
            <i class="bi bi-chevron-right"></i>
          </button>
        </div>
      `;
      
      // Replace the original title with the header
      if (titleElement) {
        titleElement.parentNode.replaceChild(categoryHeader, titleElement);
      } else {
        categorySection.prepend(categoryHeader);
      }
      
      // Get the row element
      const rowElement = categorySection.querySelector('.row');
      if (!rowElement) return;
      
      // Create the category container and items
      const categoryItems = document.createElement('div');
      categoryItems.id = `${category}-items`;
      categoryItems.className = 'category-items';
      
      // Move all columns to the new container
      const columns = Array.from(rowElement.querySelectorAll('.col'));
      columns.forEach(col => {
        categoryItems.appendChild(col);
      });
      
      // Create container and add items
      const categoryContainer = document.createElement('div');
      categoryContainer.className = 'category-container';
      categoryContainer.appendChild(categoryItems);
      
      // Replace row with the new structure
      rowElement.parentNode.replaceChild(categoryContainer, rowElement);
    }
    
    function setupSizeOptions() {
      // Add click event to all size options
      const sizeOptions = document.querySelectorAll('.size-option');
      
      sizeOptions.forEach(option => {
        option.addEventListener('click', function() {
          // Get the parent card
          const card = this.closest('.snack-card');
          if (!card) return;
          
          // Remove active class from all options in this group
          const optionsGroup = this.parentNode;
          optionsGroup.querySelectorAll('.size-option').forEach(opt => {
            opt.classList.remove('active');
          });
          
          // Add active class to selected option
          this.classList.add('active');
          
          // Get the price info from the selected option text
          const priceText = this.textContent.trim();
          let price = null;
          
          // Extract the price based on option format (e.g., "Medium PKR 400" or "Small")
          if (priceText.includes('PKR')) {
            const priceMatch = priceText.match(/PKR\s+(\d+)/);
            if (priceMatch && priceMatch[1]) {
              price = priceMatch[1];
            }
          } else {
            // For "Small" or default option, get base price
            const priceDisplay = card.querySelector('.snack-price');
            if (priceDisplay) {
              const basePriceMatch = priceDisplay.textContent.match(/PKR\s+(\d+)/);
              if (basePriceMatch && basePriceMatch[1]) {
                price = basePriceMatch[1];
              }
            }
          }
          
          // Update the price display if we found a price
          if (price) {
            const priceDisplay = card.querySelector('.snack-price');
            if (priceDisplay) {
              priceDisplay.textContent = `PKR ${price}`;
            }
            
            // Also update the data-price attribute on the add-to-cart button
            const addToCartButton = card.querySelector('.btn-add-cart');
            if (addToCartButton) {
              addToCartButton.setAttribute('data-price', price);
            }
          }
        });
      });
    }
    
    function slideCategory(category, direction) {
      const container = document.getElementById(`${category}-items`);
      if (!container) return;
      
      const items = container.querySelectorAll('.col');
      if (items.length === 0) return;
      
      const itemWidth = items[0].offsetWidth + 24; // Including gap
      const containerWidth = container.parentElement.offsetWidth;
      const maxPosition = Math.max(0, items.length * itemWidth - containerWidth);
      
      if (direction === 'next') {
        slidePositions[category] = Math.min(slidePositions[category] + itemWidth * 2, maxPosition);
      } else {
        slidePositions[category] = Math.max(slidePositions[category] - itemWidth * 2, 0);
      }
      
      container.style.transform = `translateX(-${slidePositions[category]}px)`;
      
      // Update button states
      updateButtonStates(category, container, maxPosition);
    }
    
    function updateButtonStates(category, container, maxPosition) {
      const prevBtn = document.querySelector(`#${category} .prev-btn`);
      const nextBtn = document.querySelector(`#${category} .next-btn`);
      
      if (slidePositions[category] <= 0) {
        prevBtn.classList.add('disabled');
        prevBtn.setAttribute('disabled', true);
      } else {
        prevBtn.classList.remove('disabled');
        prevBtn.removeAttribute('disabled');
      }
      
      if (slidePositions[category] >= maxPosition) {
        nextBtn.classList.add('disabled');
        nextBtn.setAttribute('disabled', true);
      } else {
        nextBtn.classList.remove('disabled');
        nextBtn.removeAttribute('disabled');
      }
    }
    
    // Update button states and positions on window resize
    window.addEventListener('resize', () => {
      const categories = ['popcorn', 'drinks', 'coffee', 'shakes', 'fastfood', 'snacks', 'combos'];
      categories.forEach(category => {
        const container = document.getElementById(`${category}-items`);
        if (container) {
          const items = container.querySelectorAll('.col');
          if (items.length) {
            const itemWidth = items[0].offsetWidth + 24;
            const containerWidth = container.parentElement.offsetWidth;
            const maxPosition = Math.max(0, items.length * itemWidth - containerWidth);
            
            // Reset position if needed
            slidePositions[category] = Math.min(slidePositions[category], maxPosition);
            container.style.transform = `translateX(-${slidePositions[category]}px)`;
            
            // Update button states
            updateButtonStates(category, container, maxPosition);
          }
        }
      });
    });
    
    // Enhanced addToCart function to use the current price
    function addToCart(btn) {
      const id = btn.getAttribute('data-id');
      const name = btn.getAttribute('data-name');
      const price = parseFloat(btn.getAttribute('data-price'));
      const card = btn.closest('.snack-card');
      const qtyEl = card.querySelector('.qty-value');
      const qty = parseInt(qtyEl.textContent);
      const sizeEl = card.querySelector('.size-option.active');
      const size = sizeEl.textContent.split(' ')[0]; // Get just the size name (Small, Medium, Large)
      
      // Check if item is already in cart
      let found = false;
      for (let i = 0; i < cart.length; i++) {
        if (cart[i].id === id && cart[i].size === size) {
          cart[i].qty += qty;
          found = true;
          break;
        }
      }
      
      if (!found) {
        cart.push({
          id: id,
          name: name,
          price: price,
          qty: qty,
          size: size
        });
      }
      
      updateCart();
      
      // Show cart if it exists
      const shoppingCart = document.getElementById('shoppingCart');
      if (shoppingCart) {
        shoppingCart.classList.add('open');
      }
      
      // Reset quantity
      qtyEl.textContent = '1';
    }
  </script>
</body>
</html>