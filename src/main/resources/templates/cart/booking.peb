<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Absolute Cinema - Bookings</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: var(--bs-body-bg);
            color: var(--bs-text-color);
            font-family: 'Inter', 'Segoe UI', system-ui, -apple-system, sans-serif;
            overflow-x: hidden;
            margin: 0;
            padding: 0;
            background-image: 
              radial-gradient(circle at 100% 0%, rgba(var(--bs-primary-rgb), 0.15) 0%, transparent 25%),
              radial-gradient(circle at 0% 100%, rgba(65, 105, 225, 0.15) 0%, transparent 25%);
            background-attachment: fixed;
        }
        
        [data-bs-theme="light"] {
            --bs-body-bg: #f8f9fa82;
            --h1: #7c7c7c;
            --bs-body-bg-rgb: 248, 249, 250;
            --bs-text-color: #f8f9fa;
            --card-bg: rgba(255, 255, 255, 0.46);
            --card-hover: rgba(255, 255, 255, 0.46);
            --gradient-start: #a64dff;
            --gradient-end: #a64dff;
            --accent-color: #a64dff;
            --gradient-end: #a64dff;
            --accent-color1: #4dffff;
        }

        [data-bs-theme="dark"] {
            --bs-body-bg: #0a0a12;
            --bs-body-bg-rgb: 10, 10, 18;
            --bs-text-color: #e9ecef;
            --card-bg: rgba(30, 30, 50, 0.8);
            --card-hover: rgba(40, 40, 60, 0.95);
            --gradient-start: #a64dff;
            --h1: #a64dff;
            --gradient-end: #4dffff;
            --accent-color: #4dffff;
        }

        .logo-text {
            font-weight: 800;
            font-size: 2rem;
            background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent !important;
            letter-spacing: -0.5px;
            position: relative;
        }

        .logo-text::after {
            content: "";
            position: absolute;
            width: 8px;
            height: 8px;
            background: var(--accent-color);
            border-radius: 50%;
            bottom: 8px;
            right: -12px;
        }

        .theme-toggle {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 1001;
        }

        .theme-btn {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: rgba(var(--bs-body-bg-rgb), 0.8);
            border: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            cursor: pointer;
            backdrop-filter: blur(5px);
            transition: all 0.3s ease;
        }

        .theme-btn:hover {
            background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
            color: white;
        }

        .theme-menu {
            background: rgba(var(--bs-body-bg-rgb), 0.95);
            backdrop-filter: blur(10px);
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            overflow: hidden;
        }

        .theme-item {
            padding: 0.75rem 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            transition: all 0.2s ease;
        }

        .theme-item:hover {
            background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
            color: white !important;
        }

        .theme-item.active {
            background: rgba(var(--bs-primary-rgb), 0.2);
        }

        .header {
            background-color: rgba(10, 10, 20, 0.9);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgba(128, 128, 255, 0.2);
        }
        
        .logo {
            color: #a64dff;
            font-size: 1.8rem;
            font-weight: bold;
            text-decoration: none;
        }
        
        .dot {
            color: #4dffff;
        }
        
        .search-bar {
            flex-grow: 0.4;
            max-width: 400px;
        }
        
        .search-input {
            width: 100%;
            padding: 0.6rem 1rem;
            border-radius: 30px;
            border: none;
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
        }
        
        .nav {
            background-color: rgba(10, 10, 20, 0.8);
            padding: 0.8rem 2rem;
            display: flex;
            gap: 2rem;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }
        
        .nav a {
            color: #ccc;
            text-decoration: none;
            font-size: 1rem;
            transition: color 0.3s;
            white-space: nowrap;
        }
        
        .nav a:hover, .nav a.active {
            color: #a64dff;
        }
        
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }
        
        h1 {
            font-size: 2rem;
            color: var(--h1);
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #a64dff;
            display: inline-block;
        }
        
        .section-title {
            font-size: 1.5rem;
            color: #4dffff;
            margin: 2rem 0 1rem;
        }
        
        .booking-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .booking-item {
            background-color: rgba(30, 30, 50, 0.7);
            border-radius: 8px;
            padding: 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
            transition: all 0.2s;
            position: relative;
        }
        
        .booking-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
        }
        
        .booking-item.removed {
            opacity: 0;
            transform: translateX(100px);
            height: 0;
            padding: 0;
            margin: 0;
            overflow: hidden;
        }
        
        .movie-info {
            display: flex;
            gap: 1.5rem;
            align-items: center;
            flex: 1;
        }
        
        .snack-info {
            display: flex;
            gap: 1.5rem;
            align-items: center;
            flex: 1;
        }
        
        .movie-poster {
            width: 80px;
            height: 120px;
            object-fit: cover;
            border-radius: 4px;
        }
        
        .snack-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
        }
        
        .movie-details h3, .snack-details h3 {
            margin: 0 0 0.5rem 0;
            font-size: 1.3rem;
        }
        
        .movie-details p, .snack-details p {
            margin: 0.3rem 0;
            color: #ccc;
        }
        
        .booking-details {
            text-align: right;
            min-width: 200px;
        }
        
        .seats {
            margin: 0;
            font-weight: bold;
            color: #4dffff;
        }
        
        .price {
            font-size: 1.2rem;
            font-weight: bold;
            margin: 0.3rem 0;
        }
        
        .quantity-controls {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            gap: 0.8rem;
            margin-top: 0.8rem;
        }
        
        .quantity-btn {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: rgba(166, 77, 255, 0.2);
            border: 1px solid rgb(166, 77, 255);
            color: white;
            font-size: 1.2rem;
            line-height: 1;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s;
        }
        
        .quantity-btn:hover {
            background-color: rgba(166, 77, 255, 0.4);
        }
        
        .quantity-btn.disabled {
            opacity: 0.3;
            cursor: not-allowed;
        }
        
        .quantity-value {
            font-weight: bold;
            width: 30px;
            text-align: center;
        }
        
        .action-buttons {
            display: flex;
            gap: 0.8rem;
            margin-top: 1rem;
            justify-content: flex-end;
        }
        
        .edit-btn, .cancel-btn, .save-btn {
            background-color: transparent;
            padding: 0.6rem 1.2rem;
            border-radius: 30px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
        }
        
        .edit-btn {
            color: #a64dff;
            border: 1px solid rgb(166, 77, 255);
        }
        
        .edit-btn:hover {
            background-color: rgba(166, 77, 255, 0.1);
        }
        
        .remove-btn {
            background-color: transparent;
            color: #ff4d4d;
            border: 1px solid #ff4d4d;
            padding: 0.6rem 1.2rem;
            border-radius: 30px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
        }
        
        .remove-btn:hover {
            background-color: rgba(255, 77, 77, 0.1);
        }
        
        .cancel-btn {
            color: #ccc;
            border: 1px solid #ccc;
        }
        
        .cancel-btn:hover {
            background-color: rgba(204, 204, 204, 0.1);
        }
        
        .save-btn {
            color: #4dffff;
            border: 1px solid #4dffff;
        }
        
        .save-btn:hover {
            background-color: rgba(77, 255, 255, 0.1);
        }
        
        .cart-summary {
            background-color: rgba(30, 30, 50, 0.7);
            border-radius: 8px;
            padding: 1.5rem;
            margin-top: 2rem;
        }
        
        .cart-total {
            display: flex;
            justify-content: space-between;
            font-size: 1.2rem;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .checkout-btn {
            width: 100%;
            padding: 1rem;
            font-size: 1.1rem;
            background-color: #4dffffa1;
            color: #0a0a14;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: bold;
        }
        
        .checkout-btn:hover {
            background-color: #3fe0e0a5;
            transform: translateY(-2px);
        }
        
        .empty-cart {
            text-align: center;
            padding: 3rem;
            color: #888;
            display: none;
        }
        
        .empty-cart h3 {
            margin-bottom: 1.5rem;
        }
        
        .edit-mode-controls {
            display: none;
        }
        
        .booking-item.editing .edit-mode-controls {
            display: flex;
        }
        
        .booking-item.editing .normal-controls {
            display: none;
        }
        
        .ticket-info {
            background-color: rgba(77, 255, 255, 0.1);
            border-radius: 4px;
            padding: 5px 10px;
            font-size: 0.9rem;
            margin-top: 8px;
            color: #4dffff;
        }
        
        .empty-section {
            text-align: center;
            padding: 2rem;
            color: #888;
            font-style: italic;
        }
        
        /* Footer styles - moved out of media query */
        footer {
            padding: 20px 0;
            text-align: center;
            color: rgba(255, 255, 255, 0.5);
            font-size: 14px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            margin-top: 3rem;
            background-color: rgba(10, 10, 20, 0.7);
        }
        
        @media (max-width: 768px) {
            .header {
                padding: 1rem;
                flex-wrap: wrap;
            }
            
            .search-bar {
                order: 3;
                margin-top: 1rem;
                flex-basis: 100%;
                max-width: 100%;
                position: static !important;
                width: 100% !important;
            }
            
            .nav {
                padding: 0.8rem 1rem;
            }
            
            .movie-info, .snack-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
                width: 100%;
            }
            
            .booking-item {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .booking-details {
                text-align: left;
                width: 100%;
                margin-top: 1rem;
                min-width: unset;
            }
            
            .quantity-controls {
                justify-content: flex-start;
            }
            
            .action-buttons {
                width: 100%;
                justify-content: flex-start;
            }

            .theme-toggle {
                position: fixed;
                top: 1rem;
                right: 1rem;
                z-index: 1001;
            }

            .theme-btn {
                width: 45px;
                height: 45px;
                border-radius: 50%;
                background: rgba(var(--bs-body-bg-rgb), 0.8);
                border: 1px solid rgba(255, 255, 255, 0.1);
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.2rem;
                cursor: pointer;
                backdrop-filter: blur(5px);
                transition: all 0.3s ease;
            }

            .theme-btn:hover {
                background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
                color: white;
            }

            .theme-menu {
                background: rgba(var(--bs-body-bg-rgb), 0.95);
                backdrop-filter: blur(10px);
                border-radius: 12px;
                border: 1px solid rgba(255, 255, 255, 0.1);
                overflow: hidden;
            }

            /* Footer responsive adjustments */
            footer {
                padding: 15px 10px;
            }
        }
    </style>
</head>
<body data-bs-theme="light">

    <div class="theme-toggle">
        <div class="dropdown">
          <button class="theme-btn" type="button" id="themeToggle" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="bi bi-moon-stars-fill"></i>
          </button>
          <ul class="dropdown-menu theme-menu" aria-labelledby="themeToggle">
            <li><button class="dropdown-item theme-item" data-bs-theme-value="light"><i class="bi bi-sun-fill"></i>Light</button></li>
            <li><button class="dropdown-item theme-item active" data-bs-theme-value="dark"><i class="bi bi-moon-stars-fill"></i>Dark</button></li>
            <li><button class="dropdown-item theme-item" data-bs-theme-value="auto"><i class="bi bi-circle-half"></i>Auto</button></li>
          </ul>
        </div>
      </div>


    <header class="header">
        <a href="#" class="logo">Absolute Cinema<span class="dot">.</span></a>
        <div class="search-bar" style="position: absolute;left: 1000px;width: 600px;">
            <input type="text" class="search-input" placeholder="Search movies...">
        </div>
    </header>
    
    <nav class="nav">
        <a href="#">Home</a>
        <a href="#">Movies</a>
        <a href="#" class="active">Bookings</a>
        <a href="#">Snacks</a>
        <a href="#">Loyalty Program</a>
        <a href="#">Feedback</a>
        <a href="#">Contact</a>
    </nav>
    
    <div class="container">
        <h1>Your Bookings</h1>
        
        <div class="section-title">Movie Tickets</div>
        <div class="booking-list" id="movie-tickets">
            <div class="booking-item" id="ticket-1">
                <div class="movie-info">
                    <img src="/api/placeholder/80/120" alt="Movie poster" class="movie-poster">
                    <div class="movie-details">
                        <h3>Echoes of Tomorrow</h3>
                        <p>Date: April 25, 2025</p>
                        <p>Time: 7:30 PM</p>
                        <p>Hall: IMAX 2</p>
                    </div>
                </div>
                <div class="booking-details">
                    <p class="seats">Seats: F10, F11, F12</p>
                    <p class="price">PKR 4,500</p>
                    <p class="ticket-info">Ticket selections are fixed after booking</p>
                    
                    <div class="quantity-controls">
                        <span>Tickets:</span>
                        <button class="quantity-btn quantity-decrease disabled" disabled>-</button>
                        <span class="quantity-value">3</span>
                        <button class="quantity-btn quantity-increase disabled" disabled>+</button>
                    </div>
                    
                    <div class="action-buttons normal-controls">
                        <button class="remove-btn" onclick="removeItem('ticket-1')">Remove</button>
                    </div>
                </div>
            </div>
            
            <div class="booking-item" id="ticket-2">
                <div class="movie-info">
                    <img src="/api/placeholder/80/120" alt="Movie poster" class="movie-poster">
                    <div class="movie-details">
                        <h3>Autumn Whispers</h3>
                        <p>Date: April 24, 2025</p>
                        <p>Time: 4:15 PM</p>
                        <p>Hall: Standard 4</p>
                    </div>
                </div>
                <div class="booking-details">
                    <p class="seats">Seats: D5, D6</p>
                    <p class="price">PKR 3,000</p>
                    <p class="ticket-info">Ticket selections are fixed after booking</p>
                    
                    <div class="quantity-controls">
                        <span>Tickets:</span>
                        <button class="quantity-btn quantity-decrease disabled" disabled>-</button>
                        <span class="quantity-value">2</span>
                        <button class="quantity-btn quantity-increase disabled" disabled>+</button>
                    </div>
                    
                    <div class="action-buttons normal-controls">
                        <button class="remove-btn" onclick="removeItem('ticket-2')">Remove</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="section-title">Snacks & Refreshments</div>
        <div class="booking-list" id="snacks">
            <div class="booking-item" id="snack-1">
                <div class="snack-info">
                    <img src="/api/placeholder/80/80" alt="Popcorn" class="snack-image">
                    <div class="snack-details">
                        <h3>Large Caramel Popcorn</h3>
                        <p>Size: Large</p>
                        <p>Type: Caramel</p>
                    </div>
                </div>
                <div class="booking-details">
                    <p class="price">PKR 600</p>
                    
                    <div class="quantity-controls">
                        <span>Quantity:</span>
                        <button class="quantity-btn quantity-decrease" onclick="updateQuantity('snack-1', -1)">-</button>
                        <span class="quantity-value">2</span>
                        <button class="quantity-btn quantity-increase" onclick="updateQuantity('snack-1', 1)">+</button>
                    </div>
                    
                    <div class="action-buttons normal-controls">
                        <button class="edit-btn" onclick="toggleEditMode('snack-1', true)">Edit</button>
                        <button class="remove-btn" onclick="removeItem('snack-1')">Remove</button>
                    </div>
                    <div class="action-buttons edit-mode-controls">
                        <button class="cancel-btn" onclick="toggleEditMode('snack-1', false)">Cancel</button>
                        <button class="save-btn" onclick="saveChanges('snack-1')">Save</button>
                    </div>
                </div>
            </div>
            
            <div class="booking-item" id="snack-2">
                <div class="snack-info">
                    <img src="/api/placeholder/80/80" alt="Drinks" class="snack-image">
                    <div class="snack-details">
                        <h3>Soft Drink Combo</h3>
                        <p>Size: Medium</p>
                        <p>Includes: 2 Drinks</p>
                    </div>
                </div>
                <div class="booking-details">
                    <p class="price">PKR 450</p>
                    
                    <div class="quantity-controls">
                        <span>Quantity:</span>
                        <button class="quantity-btn quantity-decrease" onclick="updateQuantity('snack-2', -1)">-</button>
                        <span class="quantity-value">1</span>
                        <button class="quantity-btn quantity-increase" onclick="updateQuantity('snack-2', 1)">+</button>
                    </div>
                    
                    <div class="action-buttons normal-controls">
                        <button class="edit-btn" onclick="toggleEditMode('snack-2', true)">Edit</button>
                        <button class="remove-btn" onclick="removeItem('snack-2')">Remove</button>
                    </div>
                    <div class="action-buttons edit-mode-controls">
                        <button class="cancel-btn" onclick="toggleEditMode('snack-2', false)">Cancel</button>
                        <button class="save-btn" onclick="saveChanges('snack-2')">Save</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="cart-summary" id="cart-summary">
            <div class="cart-total">
                <span>Total:</span>
                <span id="total-amount">PKR 8,550</span>
            </div>
            <button class="checkout-btn">Proceed to Checkout</button>
        </div>
        
        <div class="empty-cart" id="empty-cart">
            <h3>Your booking list is empty</h3>
            <p>Browse our movies and snacks to add items to your cart!</p>
            <button class="btn btn-primary">Explore Now</button>
        </div>
    </div>
    
    <!-- Footer moved outside the container and styled properly -->
    <footer>
        <div class="container">
            <p>&copy; 2025 Absolute Cinema. All rights reserved.</p>
        </div>
    </footer>
    
    <script>
        // Initial data for items
        const items = {
            'ticket-1': { 
                type: 'movie', 
                price: 1500, 
                quantity: 3, 
                totalPrice: 4500,
                originalQuantity: 3,
                editable: false
            },
            'ticket-2': { 
                type: 'movie', 
                price: 1500, 
                quantity: 2, 
                totalPrice: 3000,
                originalQuantity: 2,
                editable: false
            },
            'snack-1': { 
                type: 'snack', 
                price: 300, 
                quantity: 2, 
                totalPrice: 600,
                originalQuantity: 2,
                editable: true
            },
            'snack-2': { 
                type: 'snack', 
                price: 450, 
                quantity: 1, 
                totalPrice: 450,
                originalQuantity: 1,
                editable: true
            }
        };
        
        // Function to update quantity
        function updateQuantity(itemId, change) {
            const item = items[itemId];
            
            // Skip if item is not editable (ticket)
            if (!item.editable) return;
            
            const newQuantity = item.quantity + change;
            
            // Don't allow quantity below 1
            if (newQuantity < 1) return;
            
            // Update quantity
            item.quantity = newQuantity;
            item.totalPrice = item.price * newQuantity;
            
            // Update UI
            const quantityElement = document.querySelector(`#${itemId} .quantity-value`);
            const priceElement = document.querySelector(`#${itemId} .price`);
            
            quantityElement.textContent = newQuantity;
            priceElement.textContent = `PKR ${item.totalPrice.toLocaleString()}`;
            
            // Enable/disable decrease button
            const decreaseBtn = document.querySelector(`#${itemId} .quantity-decrease`);
            decreaseBtn.disabled = newQuantity <= 1;
            decreaseBtn.classList.toggle('disabled', newQuantity <= 1);
            
            // Update total
            updateTotal();
        }
        
        // Function to toggle edit mode
        function toggleEditMode(itemId, isEdit) {
            const item = document.getElementById(itemId);
            const itemData = items[itemId];
            
            // Skip if item is not editable (ticket)
            if (!itemData.editable) return;
            
            if (isEdit) {
                // Enter edit mode
                item.classList.add('editing');
                
                // Store original quantity for potential cancellation
                itemData.originalQuantity = itemData.quantity;
                
                // Enable quantity buttons
                const decreaseBtn = item.querySelector('.quantity-decrease');
                decreaseBtn.disabled = itemData.quantity <= 1;
                decreaseBtn.classList.toggle('disabled', itemData.quantity <= 1);
                
                const increaseBtn = item.querySelector('.quantity-increase');
                increaseBtn.disabled = false;
                increaseBtn.classList.remove('disabled');
            } else {
                // Exit edit mode
                item.classList.remove('editing');
                
                // Reset to original quantity if canceling
                itemData.quantity = itemData.originalQuantity;
                itemData.totalPrice = itemData.price * itemData.originalQuantity;
                
                // Update UI
                const quantityElement = item.querySelector('.quantity-value');
                const priceElement = item.querySelector('.price');
                
                quantityElement.textContent = itemData.quantity;
                priceElement.textContent = `PKR ${itemData.totalPrice.toLocaleString()}`;
                
                // Update total
                updateTotal();
            }
        }
        
        // Function to save changes
        function saveChanges(itemId) {
            const itemData = items[itemId];
            
            // Skip if item is not editable (ticket)
            if (!itemData.editable) return;
            
            // Update the original quantity to match current
            itemData.originalQuantity = itemData.quantity;
            
            // Exit edit mode
            document.getElementById(itemId).classList.remove('editing');
        }
        
        // Function to remove item
        function removeItem(itemId) {
            // Remove from data
            delete items[itemId];
            
            // Animate and remove from DOM
            const item = document.getElementById(itemId);
            item.classList.add('removed');
            
            setTimeout(() => {
                item.remove();
                
                // Update total
                updateTotal();
                
                // Check if any sections are empty
                checkSectionStatus();
            }, 300);
        }
        
        // Function to update total amount
        function updateTotal() {
            let total = 0;
            
            for (const itemId in items) {
                total += items[itemId].totalPrice;
            }
            
            // Update UI
            document.getElementById('total-amount').textContent = `PKR ${total.toLocaleString()}`;
            
            // Check if cart is empty
            if (total === 0) {
                document.getElementById('cart-summary').style.display = 'none';
                document.getElementById('empty-cart').style.display = 'block';
            } else {
                document.getElementById('cart-summary').style.display = 'block';
                document.getElementById('empty-cart').style.display = 'none';
            }
        }
        
        // Function to check if sections are empty
        function checkSectionStatus() {
            const movieSection = document.getElementById('movie-tickets');
            const snackSection = document.getElementById('snacks');
            
            // Check if movie section is empty
            if (movieSection.children.length === 0) {
                movieSection.innerHTML = '<div class="empty-section">No movie tickets in your cart</div>';
            }
            
            // Check if snack section is empty
            if (snackSection.children.length === 0) {
                snackSection.innerHTML = '<div class="empty-section">No snacks in your cart</div>';
            }
        }
        
        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            updateTotal();
        });
    </script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Theme toggle functionality
    document.addEventListener('DOMContentLoaded', () => {
      const themeButtons = document.querySelectorAll('.theme-item');
      
      // Set theme from localStorage or default to dark
      const savedTheme = localStorage.getItem('theme') || 'dark';
      document.documentElement.setAttribute('data-bs-theme', savedTheme);
      
      // Update active class
      themeButtons.forEach(button => {
        if (button.getAttribute('data-bs-theme-value') === savedTheme) {
          button.classList.add('active');
        } else {
          button.classList.remove('active');
        }
      });
      
      // Event listeners for theme buttons
      themeButtons.forEach(button => {
        button.addEventListener('click', () => {
          const theme = button.getAttribute('data-bs-theme-value');
          console.log(theme);
          document.body.setAttribute('data-bs-theme', theme);
          localStorage.setItem('theme', theme);
          
          // Update active class
          themeButtons.forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
        });
      });
    });
    </script>
<script>// Theme Toggle
    document.querySelectorAll('[data-bs-theme-value]').forEach(button => {
      button.addEventListener('click', () => {
        const theme = button.getAttribute('data-bs-theme-value');
        document.documentElement.setAttribute('data-bs-theme', theme);
        localStorage.setItem('theme', theme);
        document.querySelectorAll('[data-bs-theme-value]').forEach(btn => {
          btn.parentElement.classList.remove('active');
        });
        button.parentElement.classList.add('active');
      });
    });
    </script>

</body>
</html>