<!DOCTYPE html>
<html lang="en">
<head>
<<<<<<< HEAD
    <meta charset="UTF-8" />
    <title>Settings</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 1rem;
            margin: 0;
        }

        .settings {
            border: 2px solid #333;
            border-radius: 6px;
            padding: 1rem;
            width: 100%;
            box-sizing: border-box;
        }

        .settings h2 {
            margin-left: 50px;
            margin-top: 0;
        }

        .section {
            margin-left: 50px;
            margin-right: 100px;
            border: 1px solid #666;
            border-radius: 4px;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .field {
            display: flex;
            align-items: center;
            margin-bottom: 0.75rem;
        }

        .field label {
            width: 120px;
            margin-left: 150px;
            font-weight: bold;
        }

        .field input,
        .field select {
            width: 120px;
            padding: 0.4em;
            margin-left: 200px;
            font-size: 1em;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 3px;
            background: #f0f0f0;
            color: var(--bs-text-color, #212529);
            caret-color: auto;
        }

        .controls {
            display: flex;
            align-items: center;
            margin-left: 20px;
            gap: 0.3em;
        }

        .view-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.2em;
        }

        .edit-btn {
            padding: 0.4em 0.8em;
            border: none;
            border-radius: 4px;
            background: #007bff;
            color: #fff;
            cursor: pointer;
            font-size: 0.9em;
        }

        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal {
            background: #fff;
            border-radius: 6px;
            padding: 1.5rem;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.3);
        }

        .modal h3 {
            margin-top: 0;
        }

        .modal .modal-field {
            margin-bottom: 1rem;
        }

        .modal label {
            display: block;
            margin-bottom: 0.3rem;
            font-weight: bold;
        }

        .modal input, .modal select {
            width: 100%;
            padding: 0.4em;
            font-size: 1em;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        .modal button {
            padding: 0.5em 1em;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
        }

        .modal .save-btn { background: #28a745; color: #fff; }
        .modal .cancel-btn { background: #dc3545; color: #fff; margin-left: 0.5em; }

        /* Light theme */
        body.light-theme {
            --bs-body-bg: #f8f9fa;
            --bs-text-color: #212529;
        }

        /* Dark theme */
        body.dark-theme {
            --bs-body-bg: #0a0a12;
            --bs-text-color: #e9ecef;
        }

        body {
            background-color: var(--bs-body-bg);
            color: var(--bs-text-color);
        }

        .settings {
            background-color: var(--bs-body-bg);
            color: var(--bs-text-color);
        }
    </style>
</head>
<body class="light-theme">

<div class="settings">
    <h2>Settings Preview</h2>
    <div class="section" id="preview-section">
        <div class="field" data-field="name">
            <label>Name:</label>
            <input type="text" value="John Doe" readonly>
            <div class="controls">
                <button class="view-btn" title="Preview">üëÅÔ∏è</button>
                <button class="edit-btn">Edit</button>
            </div>
        </div>

        <div class="field" data-field="username">
            <label>User Name:</label>
            <input type="text" value="John Doe" readonly>
            <div class="controls">
                <button class="view-btn" title="Preview">üëÅÔ∏è</button>
                <button class="edit-btn">Edit</button>
            </div>
        </div>

        <div class="field" data-field="email">
            <label>Email:</label>
            <input type="email" value="john@example.com" readonly>
            <div class="controls">
                <button class="view-btn" title="Preview">üëÅÔ∏è</button>
                <button class="edit-btn">Edit</button>
            </div>
        </div>

        <div class="field" data-field="password">
            <label>Password:</label>
            <input type="password" value="secret123" readonly>
            <div class="controls">
                <button class="view-btn" title="Preview">üëÅÔ∏è</button>
                <button class="edit-btn">Edit</button>
            </div>
        </div>

        <div class="field" data-field="phone">
            <label>Phone Number:</label>
            <input type="tel" value="+1-234-567-8901" readonly>
            <div class="controls">
                <button class="view-btn" title="Preview">üëÅÔ∏è</button>
                <button class="edit-btn">Edit</button>
            </div>
        </div>

        <div class="field" data-field="gender">
            <label>Gender:</label>
            <select disabled>
                <option>Male</option>
                <option>Female</option>
                <option>Other</option>
            </select>
            <div class="controls">
                <button class="view-btn" title="Preview">üëÅÔ∏è</button>
                <button class="edit-btn">Edit</button>
            </div>
        </div>
    </div>

    <h2>Account Settings</h2>
    <div class="section" id="account-section">
        <div class="account-actions">
            <div class="field" style="margin-bottom:10px;" data-field="theme">
                <button id="theme" class="toggle-btn">Day Mode</button>
            </div>
            <button class="logout-btn">Logout</button>
        </div>
    </div>
</div>

<div class="modal-overlay" id="modalOverlay">
    <div class="modal" id="modalForm">
        <h3 id="modalTitle">Edit</h3>
        <div id="modalFields"></div>
        <div style="text-align: right;">
            <button class="save-btn" id="modalSave">Save</button>
            <button class="cancel-btn" id="modalCancel">Cancel</button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('#preview-section .field input, #preview-section .field select').forEach(el => {
            el.dataset.orig = el.value;
            if (el.tagName.toLowerCase() === 'select') {
                el.selectedIndex = -1;
            } else {
                el.value = '';
                el.style.color = 'transparent';
            }
            el.dataset.visible = 'false';
        });
    });

    document.querySelectorAll('.view-btn').forEach(vb => {
        vb.addEventListener('click', () => {
            const fld = vb.closest('.field');
            const el = fld.querySelector('input, select');
            const visible = el.dataset.visible === 'true';
            if (!visible) {
                if (el.tagName.toLowerCase() === 'select') {
                    Array.from(el.options).forEach((opt, i) => {
                        if (opt.value === el.dataset.orig) el.selectedIndex = i;
                    });
                } else {
                    el.value = el.dataset.orig;
                }
                el.style.color = '';
                el.dataset.visible = 'true';
                vb.textContent = 'üôà';
            } else {
                if (el.tagName.toLowerCase() === 'select') el.selectedIndex = -1;
                else {
                    el.value = '';
                    el.style.color = 'transparent';
                }
                el.dataset.visible = 'false';
                vb.textContent = 'üëÅÔ∏è';
            }
        });
    });

    const modalOverlay = document.getElementById('modalOverlay');
    const modalTitle = document.getElementById('modalTitle');
    const modalFields = document.getElementById('modalFields');
    let currentField;
    const fieldConfigs = {
        name: [{ label: 'New Name', type: 'text', name: 'newValue' }],
        username: [{ label: 'New Username', type: 'text', name: 'newValue' }],
        email: [{ label: 'New Email', type: 'email', name: 'newValue' }, { label: 'Current Password', type: 'password', name: 'Password' }],
        password: [
            { label: 'Current Password', type: 'password', name: 'currentPassword' },
            { label: 'New Password', type: 'password', name: 'newValue' },
            { label: 'Confirm New Password', type: 'password', name: 'confirmValue' }
        ],
        phone: [{ label: 'New Phone Number', type: 'tel', name: 'newValue' }, { label: 'Current Password', type: 'password', name: 'currentPassword' }],
        gender: [{ label: 'Select Gender', type: 'select', name: 'newValue', options: ['Male', 'Female', 'Other'] }]
    };

    document.querySelectorAll('.edit-btn').forEach(btn => btn.addEventListener('click', () => {
        const fld = btn.closest('.field');
        currentField = fld;
        const key = fld.dataset.field;
        modalTitle.textContent = 'Edit ' + key.charAt(0).toUpperCase() + key.slice(1);
        modalFields.innerHTML = '';
        fieldConfigs[key].forEach(cfg => {
            const wrap = document.createElement('div');
            wrap.className = 'modal-field';
            const lbl = document.createElement('label');
            lbl.textContent = cfg.label;
            wrap.appendChild(lbl);
            let inp;
            if (cfg.type === 'select') {
                inp = document.createElement('select');
                cfg.options.forEach(o => {
                    const opt = document.createElement('option');
                    opt.value = opt.textContent = o;
                    inp.appendChild(opt);
                });
            } else {
                inp = document.createElement('input');
                inp.type = cfg.type;
            }
            inp.name = cfg.name;
            wrap.appendChild(inp);
            modalFields.appendChild(wrap);
        });
        modalOverlay.style.display = 'flex';
    }));

    document.getElementById('modalCancel').addEventListener('click', () => {
        modalOverlay.style.display = 'none';
    });

    document.getElementById('modalSave').addEventListener('click', () => {
        const data = {};
        modalFields.querySelectorAll('input, select').forEach(i => data[i.name] = i.value);
        if (data.confirmValue !== undefined && data.newValue !== data.confirmValue) {
            alert('New value and confirmation do not match.');
            return;
        }

        const el = currentField.querySelector('input, select');
        if (data.newValue !== undefined) {
            el.dataset.orig = data.newValue;
        }

        if (el.dataset.visible === 'true') {
            if (el.tagName.toLowerCase() === 'select') {
                const opts = Array.from(el.options);
                const newIndex = opts.findIndex(o => o.value === el.dataset.orig);
                el.selectedIndex = newIndex;
            } else {
                el.value = el.dataset.orig;
            }
        }

        modalOverlay.style.display = 'none';
    });

    const themeBtn = document.getElementById('theme');
    const body = document.body;
    themeBtn.addEventListener('click', () => {
        if (body.classList.toggle('dark-theme')) {
            themeBtn.textContent = 'Night Mode';
            body.classList.remove('light-theme');
        } else {
            themeBtn.textContent = 'Day Mode';
            body.classList.add('light-theme');
        }

    });
</script>
</body>
</html>
